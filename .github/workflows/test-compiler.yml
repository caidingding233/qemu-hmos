name: Test Compiler Path

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip tree

    - name: Download and setup SDK
      run: |
        echo "=== Downloading SDK ==="
        curl -OL https://repo.huaweicloud.com/openharmony/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz
        
        echo "=== Extracting SDK ==="
        tar -xzf ohos-sdk-windows_linux-public.tar.gz
        rm ohos-sdk-windows_linux-public.tar.gz
        rm -rf ohos-sdk/{ohos,windows}
        
        echo "=== Processing SDK ==="
        cd ohos-sdk/linux
        
        # Extract files one by one to avoid pipe issues
        echo "Extracting SDK files..."
        find . -type f -name "*.zip" | while read -r file; do
          echo "Extracting: $file"
          if unzip -q "$file"; then
            rm "$file"
            echo "✅ Extracted: $file"
          else
            echo "❌ Failed to extract: $file"
          fi
        done
        
        cd ../..
        
        echo "=== Finding Clang Compiler ==="
        CLANG_PATH=$(find ohos-sdk/linux -name "aarch64-unknown-linux-ohos-clang" -type f 2>/dev/null | head -1)
        
        if [ -z "$CLANG_PATH" ]; then
          echo "❌ Could not find clang compiler"
          echo "SDK structure:"
          find ohos-sdk/linux -name "*clang*" -type f 2>/dev/null | head -10 || echo "No clang files found"
          exit 1
        fi
        
        echo "✅ Found clang at: $CLANG_PATH"
        
        # Set environment variables
        NDK_PATH=$(dirname "$CLANG_PATH")
        NDK_PATH=$(dirname "$NDK_PATH")
        NDK_PATH=$(dirname "$NDK_PATH")
        
        echo "OHOS_NDK_HOME=$NDK_PATH" >> $GITHUB_ENV
        echo "SYSROOT=$NDK_PATH/sysroot" >> $GITHUB_ENV
        echo "CC=$CLANG_PATH" >> $GITHUB_ENV
        echo "CXX=$NDK_PATH/llvm/bin/aarch64-unknown-linux-ohos-clang++" >> $GITHUB_ENV
        echo "AR=$NDK_PATH/llvm/bin/llvm-ar" >> $GITHUB_ENV
        echo "STRIP=$NDK_PATH/llvm/bin/llvm-strip" >> $GITHUB_ENV
        echo "RANLIB=$NDK_PATH/llvm/bin/llvm-ranlib" >> $GITHUB_ENV
        echo "LD=$NDK_PATH/llvm/bin/ld.lld" >> $GITHUB_ENV

    - name: Test Compiler
      run: |
        echo "=== Testing Compiler Environment ==="
        echo "CC: $CC"
        echo "CXX: $CXX"
        echo "AR: $AR"
        echo "STRIP: $STRIP"
        echo "RANLIB: $RANLIB"
        echo "LD: $LD"
        echo "SYSROOT: $SYSROOT"
        echo ""
        
        echo "=== Verifying Files ==="
        for tool in CC CXX AR STRIP RANLIB LD; do
          path=$(eval echo \$$tool)
          if [ -f "$path" ]; then
            echo "✅ $tool: $path"
          else
            echo "❌ $tool: $path (not found)"
          fi
        done
        
        if [ -d "$SYSROOT" ]; then
          echo "✅ SYSROOT: $SYSROOT"
        else
          echo "❌ SYSROOT: $SYSROOT (not found)"
        fi
        
        echo ""
        echo "=== Testing Compiler Execution ==="
        if [ -f "$CC" ]; then
          echo "Testing CC compiler..."
          if "$CC" --version 2>&1 | head -3; then
            echo "✅ CC compiler works!"
          else
            echo "❌ CC compiler failed"
          fi
        fi
        
        if [ -f "$CXX" ]; then
          echo "Testing CXX compiler..."
          if "$CXX" --version 2>&1 | head -3; then
            echo "✅ CXX compiler works!"
          else
            echo "❌ CXX compiler failed"
          fi
        fi
        
        echo ""
        echo "=== Testing Simple Compilation ==="
        cat > test.c << 'EOF'
        #include <stdio.h>
        int main() {
            printf("Hello from HarmonyOS compiler!\n");
            return 0;
        }
        EOF
        
        echo "Compiling test.c..."
        if "$CC" -target aarch64-unknown-linux-ohos --sysroot="$SYSROOT" test.c -o test 2>&1; then
          echo "✅ Compilation successful!"
          file test
        else
          echo "❌ Compilation failed"
        fi
