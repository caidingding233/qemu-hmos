name: Debug Compiler Path

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip tree

    - name: Download and setup SDK
      run: |
        echo "=== Downloading SDK ==="
        curl -OL https://repo.huaweicloud.com/openharmony/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz
        
        echo "=== Extracting SDK ==="
        tar -xzf ohos-sdk-windows_linux-public.tar.gz
        rm ohos-sdk-windows_linux-public.tar.gz
        rm -rf ohos-sdk/{ohos,windows}
        
        echo "=== Processing SDK ==="
        cd ohos-sdk/linux
        
        # Extract files one by one to avoid pipe issues
        echo "Extracting SDK files..."
        find . -type f -name "*.zip" | while read -r file; do
          echo "Extracting: $file"
          if unzip -q "$file"; then
            rm "$file"
            echo "✅ Extracted: $file"
          else
            echo "❌ Failed to extract: $file"
          fi
        done
        
        cd ../..
        
        echo "=== SDK Structure Analysis ==="
        echo "Root structure:"
        tree ohos-sdk/linux -L 3 || ls -la ohos-sdk/linux/
        
        echo ""
        echo "=== Finding Clang Compiler ==="
        echo "Searching for aarch64-unknown-linux-ohos-clang..."
        find ohos-sdk/linux -name "*clang*" -type f 2>/dev/null | head -20 || echo "No clang files found"
        
        echo ""
        echo "=== Finding Target Compiler ==="
        TARGET_CLANG=$(find ohos-sdk/linux -name "aarch64-unknown-linux-ohos-clang" -type f 2>/dev/null | head -1)
        if [ -n "$TARGET_CLANG" ]; then
          echo "✅ Found target compiler: $TARGET_CLANG"
          
          # Get NDK path
          NDK_PATH=$(dirname "$TARGET_CLANG")
          NDK_PATH=$(dirname "$NDK_PATH")
          NDK_PATH=$(dirname "$NDK_PATH")
          echo "✅ NDK Path: $NDK_PATH"
          
          # Check NDK structure
          echo ""
          echo "=== NDK Structure ==="
          ls -la "$NDK_PATH/" || echo "Cannot list NDK directory"
          
          echo ""
          echo "=== LLVM Bin Directory ==="
          ls -la "$NDK_PATH/llvm/bin/" || echo "Cannot list LLVM bin directory"
          
          echo ""
          echo "=== Sysroot Directory ==="
          ls -la "$NDK_PATH/sysroot/" || echo "Cannot list sysroot directory"
          
          # Test compiler
          echo ""
          echo "=== Testing Compiler ==="
          if [ -f "$TARGET_CLANG" ]; then
            echo "Compiler exists: Yes"
            echo "Compiler size: $(du -h "$TARGET_CLANG" | cut -f1)"
            echo "Compiler type: $(file "$TARGET_CLANG")"
            
            # Test if compiler works
            echo ""
            echo "=== Testing Compiler Execution ==="
            if "$TARGET_CLANG" --version 2>&1 | head -5; then
              echo "✅ Compiler works!"
            else
              echo "❌ Compiler failed to execute"
            fi
          else
            echo "❌ Compiler file not found"
          fi
          
          # Test sysroot
          echo ""
          echo "=== Testing Sysroot ==="
          if [ -d "$NDK_PATH/sysroot" ]; then
            echo "Sysroot exists: Yes"
            echo "Sysroot size: $(du -sh "$NDK_PATH/sysroot" | cut -f1)"
            echo "Sysroot contents:"
            ls -la "$NDK_PATH/sysroot/" | head -10
          else
            echo "❌ Sysroot not found"
          fi
          
        else
          echo "❌ Target compiler not found"
          echo "Available clang files:"
          find ohos-sdk/linux -name "*clang*" -type f 2>/dev/null | head -10
        fi

    - name: Archive SDK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sdk-debug
        path: |
          ohos-sdk/
        retention-days: 1
